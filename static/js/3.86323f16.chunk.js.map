{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/Dialogs/UserMessage/UserMessage.module.css","Components/Dialogs/Dialog/Dialog.tsx","Components/Dialogs/UserMessage/UserMessage.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Dialog","props","className","s","user_dialog_item","activeLink","to","id","name","UserMessage","user_message_item","text","Dialogs","dialogsData","messagesData","sendMessage","dialogs_wrapper","user_dialog","map","dialog","key","user_message","AddMessageReduxForm","onSubmit","formData","newMessageBody","message","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","FieldRequired","DialogsContainer","newTextBody","sendMessageAC","compose","connect","state","messagesPage","dialogsActions","WithAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,YAAc,6BAA6B,aAAe,gC,oBCA/HD,EAAOC,QAAU,CAAC,iBAAmB,mC,oBCArCD,EAAOC,QAAU,CAAC,kBAAoB,yC,yJCSzBC,EAAS,SAACC,GACnB,OACI,yBAAKC,UAAWC,IAAEC,iBAAmB,IAAMD,IAAEE,YACzC,kBAAC,IAAD,CAASC,GAAI,WAAaL,EAAMM,IAAMN,EAAMO,KAA5C,O,kBCNCC,EAAc,SAACR,GACxB,OACI,yBAAKC,UAAWC,IAAEO,mBACbT,EAAMU,O,kCCMZ,SAASC,EAAQX,GAAqB,IAElCY,EAA0CZ,EAA1CY,YAAaC,EAA6Bb,EAA7Ba,aAAcC,EAAed,EAAfc,YAIlC,OACI,yBAAKb,UAAWC,IAAEa,iBACd,yBAAKd,UAAWC,IAAEc,aAEVJ,EAAYK,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAOZ,GAAIC,KAAMW,EAAOX,KAAMD,GAAIY,EAAOZ,SAGxF,yBAAKL,UAAWC,IAAEkB,cACd,kBAACC,EAAD,CAAqBC,SAXZ,SAACC,GAClBT,EAAYS,EAASC,mBAWb,6BAEQX,EAAaI,KAAI,SAAAQ,GAAO,OAAI,kBAAC,EAAD,CAAaN,IAAKM,EAAQnB,GAAIA,GAAImB,EAAQnB,GAAII,KAAMe,EAAQf,aAQhH,IAAMgB,EAAYC,YAAiB,GAiB7BN,EAAsBO,YAAkC,CAACC,KAAM,kBAAzCD,EAfgD,SAAC5B,GAEzE,OACI,0BAAMsB,SAAUtB,EAAM8B,cAClB,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACX1B,KAAK,iBACL2B,YAAY,YACZC,SAAU,CAACC,IAAcV,KAE7B,8C,gCCvBL,SAASW,EAAiBrC,GAK7B,OACI,kBAACW,EAAD,CACIG,YALY,SAACwB,GACjBtC,EAAMuC,cAAcD,IAKhB1B,YAAaZ,EAAMY,YACnBC,aAAcb,EAAMa,eAIjB2B,sBACXC,aAtBoB,SAACC,GACrB,MAAO,CACH7B,aAAc6B,EAAMC,aAAa9B,aACjCD,YAAa8B,EAAMC,aAAa/B,eAmB0D,CAC1F2B,cAAeK,IAAeL,gBAElCM,IAJWL,CAKbH","file":"static/js/3.86323f16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__3MnHL\",\"user_dialog\":\"Dialogs_user_dialog__23hJ4\",\"user_message\":\"Dialogs_user_message__mL1o_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_dialog_item\":\"Dialog_user_dialog_item__3Zr0F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_message_item\":\"UserMessage_user_message_item__3CItd\"};","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype dialogPropsType ={\r\n    name:string\r\n    id:string\r\n}\r\n\r\nexport const Dialog = (props:dialogPropsType) => {\r\n    return (\r\n        <div className={s.user_dialog_item + ' ' + s.activeLink}>\r\n            <NavLink to={'/dialog/' + props.id} >{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './UserMessage.module.css';\r\n\r\ntype UserMessagePropsType = {\r\n    text: string\r\n    id:string\r\n}\r\nexport const UserMessage = (props: UserMessagePropsType) => {\r\n    return (\r\n        <div className={s.user_message_item}>\r\n            {props.text}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {dialogsDataType, messagesDataType} from \"../../redux/dialogs-reducer\";\r\nimport {Dialog} from './Dialog/Dialog';\r\nimport {UserMessage} from \"./UserMessage/UserMessage\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {FieldRequired, maxLengthCreator} from \"../../utils/Validator\";\r\n\r\n\r\ntype dialogsType = {\r\n    messagesData: Array<messagesDataType>\r\n    dialogsData: Array<dialogsDataType>\r\n    sendMessage: (newTextBody: string) => void\r\n}\r\n\r\nexport function Dialogs(props: dialogsType) {\r\n\r\n    const {dialogsData, messagesData, sendMessage} = props\r\n    const handleSubmit = (formData: AddMessageFormDataType) => {\r\n        sendMessage(formData.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={s.dialogs_wrapper}>\r\n            <div className={s.user_dialog}>\r\n                {\r\n                    dialogsData.map(dialog => <Dialog key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n                }\r\n            </div>\r\n            <div className={s.user_message}>\r\n                <AddMessageReduxForm onSubmit={handleSubmit}/>\r\n                <div>\r\n                    {\r\n                        messagesData.map(message => <UserMessage key={message.id} id={message.id} text={message.text}/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(5)\r\ntype AddMessageFormDataType = { newMessageBody: string }\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name='newMessageBody'\r\n                placeholder='your text'\r\n                validate={[FieldRequired,maxLength]}\r\n            />\r\n            <button> send </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm<AddMessageFormDataType>({form: 'addMessageForm'})(AddMessageForm)\r\n","import React from 'react';\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {dialogsActions, dialogsDataType, messagesDataType} from \"../../redux/dialogs-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n\r\ntype DialogsContainerType = MainType & MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype MainType = {}\r\n\r\ntype MapStateToPropsType = {\r\n    messagesData: Array<messagesDataType>\r\n    dialogsData: Array<dialogsDataType>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    sendMessageAC: (text: string) => void\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        messagesData: state.messagesPage.messagesData,\r\n        dialogsData: state.messagesPage.dialogsData,\r\n    }\r\n}\r\n\r\n\r\nexport function DialogsContainer(props: DialogsContainerType) {\r\n\r\n    const sendMessage = (newTextBody:string) => {\r\n        props.sendMessageAC(newTextBody)\r\n    }\r\n    return (\r\n        <Dialogs\r\n            sendMessage={sendMessage}\r\n            dialogsData={props.dialogsData}\r\n            messagesData={props.messagesData}\r\n        />\r\n    )\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, MainType, AppStateType>(mapStateToProps, {\r\n        sendMessageAC: dialogsActions.sendMessageAC\r\n    }),\r\n    WithAuthRedirect\r\n)(DialogsContainer)\r\n\r\n"],"sourceRoot":""}